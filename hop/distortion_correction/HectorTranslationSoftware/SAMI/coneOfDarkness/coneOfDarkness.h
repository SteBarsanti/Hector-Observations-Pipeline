/*+          C O N E O F D A R K N E S S . H
 *
 * Module name:
 *     coneOfDarkness.h
 *
 * Function:
 *
 *
 * Language:
 *     C++
 *
 * Support:
 *     Nuria P.F. Lorente, AAO
 *
 * History:
 *     See ChangeLog
 *
 * ACMM Id:
 *     "@(#) $Id: ACMM:coneOfDarkness/coneOfDarkness.h,v 1.3 13-Mar-2018 13:57:33+11 nlorente $"
 *
 */

#ifndef CONEOFDARKNESS_H_
#define CONEOFDARKNESS_H_

#include <sstream>

#include "cod.h"

namespace COD {

/**
 * This is the main class.
 * Other classes are instantiated here and
 * this runs the main algorithm loop.
 */
class ConeOfDarkness{
protected:
    int _requiredSkyPositions;
    PositionList _foundSkyPositionsList;
    double _catalogueConeRadiusArcmin;
    double _requiredFoVRadiusDegrees;
    FocalPlanePosition _fieldCentre;
    PositionList _extantHoleList;
    std::map<int, TelModelParams> _telModelParamsMap;

    /* Contains the required catalogues for the plate fields
     * and checks whether a given plate position, when projected on the sky,
     * contains any sources.
     */
    PositionChecker _positionChecker;

    /* Segments the plate to produce a list of candidate blank positions. */
    PlateSegmenter _plateSegmenter;

    void readSamiPlotFile(const char* infileName);

public:
    /* TODO: Not sure why both this and getInputParameters() have the infileName as
     * a parameter.
     */
    ConeOfDarkness(std::string infileName);
    virtual ~ConeOfDarkness();

    /* This currently gets the input parameters (n x (ra,dec)), (n x FieldID),
     * list<extantHoles> from the .plt file generated by samigencfg.
     * It may be extended/supplanted in future by some other method of passing
     * in the data - e.g. command-line via Java, etc.
     */
    void getInputParameters(std::string infileName);

    /* Loops through the candidate positions until the required number of positions
     * are found or all candidates are exhausted
     */
    void findSkyPositions(std::vector<std::string> cfgFilenameV);

    const PositionList& getExtantHoleList() const {
        return _extantHoleList;
    }

    const PositionList& getFoundSkyPositionsList() const {
        return _foundSkyPositionsList;
    }
};



} /* Namespace */

#endif /* CONEOFDARKNESS_H_ */
